/*
给定一个长度为 $n$ 的整数序列，请找出最长的不包含重复的数的连续区间，输出它的长度。

#### 输入格式

第一行包含整数 $n$。

第二行包含 $n$ 个整数（均在 $0 \\sim 10^5$ 范围内），表示整数序列。

#### 输出格式

共一行，包含一个整数，表示最长的不包含重复的数的连续区间的长度。

#### 数据范围

$1 \\le n \\le 10^5$

#### 输入样例：

    5
    1 2 2 3 5


#### 输出样例：

    3
*/


#include <iostream>
using namespace  std;
const int N = 1e5+10;
int a[N],s[N],n;
int main(){
    cin >> n;
    for (int i = 0; i < n;i++)
        cin >> a[i];
    int res = 0;
    for (int i = 0, j = 0; i < n;i ++){
        s[a[i]]++;
        while(j<i&&s[a[i]]>1)
            s[a[j++]]--;
        res = max(res, i - j + 1);
    }
    cout << res;
    return 0;
}


/*
题目思路讲解：
这个题目只要求不重复的子序列，不是求递增或者递减的序列
所以双指针的check(i,j)的内容是：借助一个桶，来表示之前所存的东西的个数
s[a[i]] > 1：上一行是把新遍历到的东西加入到桶内部，然后再这里进行判断，如果大于一说明有重复的，
就让j更新到不重复为止，就是a[i]第一次出现的位置后面
j-i+1求两个位置之间的位置.
*/